{"version":3,"sources":["OutputFlames/OutputFlames.js","App.js","reportWebVitals.js","index.js"],"names":["OutputFlames","props","style","position","left","top","fontSize","color","output","App","state","Output","changeUpperText1","event","target","value","slice","match","alert","changeUpperText2","onchangeSubmit","text1","document","getElementById","text2","i","j","ch","grantTotal","ans","count","string1","split","string2","n","length","m","total","setState","bind","className","id","onChange","this","required","onClick","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"sPAkBeA,G,MAlBM,SAACC,GAWlB,OACK,qBAAKC,MAXI,CACVC,SAAW,WACXC,KAAM,QACNC,IAAK,QACLC,SAAU,OACVC,MAAO,UAMN,SACI,4BAHE,CAAC,UAAU,SAAS,aAAa,WAAW,UAAU,YAG7CN,EAAMO,cCmFfC,E,kDAzFb,WAAYR,GAAO,IAAD,8BAChB,cAAMA,IAGRS,MAAQ,CACNC,OAAS,IALO,EAQlBC,iBAAmB,SAACC,GACGA,EAAMC,OAAOC,MAAOC,OAAO,GAEhCC,MADO,aAEnBC,MAAM,iCAZM,EAgBlBC,iBAAmB,SAACN,GACCA,EAAMC,OAAOC,MAAOC,OAAO,GAEhCC,MADO,aAEnBC,MAAM,iCApBQ,EAwBpBE,eAAiB,WACf,IAAMC,EAAQC,SAASC,eAAe,YAAYR,MAC5CS,EAAQF,SAASC,eAAe,eAAeR,MACrD,GAAe,KAAVM,GAAyB,KAATG,EACpBN,MAAM,8BAEH,CACF,IAAKO,EAAGC,EAAEC,EAAaC,EAqBnBC,EArBUC,EAAM,EACdC,EAAUV,EAAMW,MAAM,IACtBC,EAAUT,EAAMQ,MAAM,IACxBE,EAAIH,EAAQI,OACZC,EAAIH,EAAQE,OACZE,EAAQH,EAAIE,EAChB,IAAKX,EAAI,EAAGA,EAAIS,EAAGT,IAGf,IADAE,EAAKI,EAAQN,GACRC,EAAI,EAAGA,EAAIU,EAAGV,IAEf,GAAIC,IAAOM,EAAQP,GACnB,CACIK,EAAQN,IAAM,EACdQ,EAAQP,IAAM,EACdI,GAAgB,EAChB,MAMO,KAFnBF,EAAaS,EAAQP,GAGlBZ,MAAM,kBAGPW,EADOD,EAAa,IAAM,EACpB,EAGAA,EAAa,EAGrB,EAAKU,SAAS,CAAC3B,OAASkB,EAAK,MA7D7B,EAAKT,eAAiB,EAAKA,eAAemB,KAApB,gBAFN,E,qDAqElB,OACE,qBAAKC,UAAU,MAAf,SACE,sBAAKA,UAAY,YAAjB,UACA,oBAAIA,UAAY,QAAhB,wBACA,sBAAKA,UAAY,WAAjB,UACM,iDACA,uBAAOC,GAAK,WAAWC,SAAYC,KAAK/B,iBAAkBgC,UAAQ,OAEtE,sBAAKJ,UAAY,cAAjB,UACI,yDACA,uBAAOC,GAAK,cAAcC,SAAYC,KAAKxB,iBAAkByB,UAAQ,OAEzE,wBAAQC,QAASF,KAAKvB,eAAemB,KAAKI,MAA1C,uBACA,cAAC,EAAD,CAAcnC,OAAUmC,KAAKjC,MAAMC,kB,GApFzBmC,aCOHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFpC,SAASC,eAAe,SAM1BwB,M","file":"static/js/main.dca40589.chunk.js","sourcesContent":["const OutputFlames = (props) => {\r\n    const style = {\r\n        position : \"absolute\",\r\n        left: \"150px\",\r\n        top: \"470px\",\r\n        fontSize: \"70px\",\r\n        color: \"yellow\",\r\n        \r\n\r\n    }\r\n    let flames=['FRIENDS','LOVERS','ATTRACTION','MARRIAGE','ENEMIES','SIBLINGS'];\r\n    return(\r\n         <div style = {style}>\r\n             <p>{flames[props.output]}</p>\r\n         </div>\r\n    );\r\n}\r\n\r\nexport default OutputFlames;","import React, { Component } from 'react';\nimport './App.css';\nimport OutputFlames from './OutputFlames/OutputFlames';\n\n\nclass App extends Component {\n\n  constructor(props){\n    super(props);\n    this.onchangeSubmit = this.onchangeSubmit.bind(this);\n  }\n  state = {\n    Output : \"\"\n  }\n  \n  changeUpperText1 = (event) => {\n      const typedText = (event.target.value).slice(-1);\n      const letterNumber = /^[0-9]+$/;\n      if((typedText.match(letterNumber))) {\n        alert(\"Please Enter Only Charecters\");\n      } \n  }\n\n  changeUpperText2 = (event) => {\n    const typedText = (event.target.value).slice(-1);\n    const letterNumber = /^[0-9]+$/;\n    if((typedText.match(letterNumber))) {\n      alert(\"Please Enter Only Charecters\");\n    } \n}\n\nonchangeSubmit = () => {\n  const text1 = document.getElementById(\"YourName\").value;\n  const text2 = document.getElementById(\"PartnerName\").value;\n  if ( text1 === \"\" || text2 ===\"\"){\n   alert(\"Please Fill the Inputs\")\n  }\n  else{\n    let  i, j,ch, count=0, grantTotal=0;\n    const string1 = text1.split('');\n    const string2 = text2.split('');\n    let n = string1.length;\n    let m = string2.length;\n    let total = n + m;\n    for (i = 0; i < n; i++)  \n    { \n        ch = string1[i]; \n        for (j = 0; j < m; j++) \n        { \n            if (ch === string2[j]) \n            { \n                string1[i] = -1; \n                string2[j] = -1; \n                count = count + 2; \n                break; \n            } \n        } \n    } \n    grantTotal = total - count;\n    let ans;\n    if (grantTotal === 0){\n       alert(\"No Match Found\")\n    }\n    else if (grantTotal % 6 === 0){\n      ans = 6;\n    }\n    else{\n      ans = grantTotal % 6;\n    }\n\n    this.setState({Output : ans -1});\n\n  }\n}\n\n  render(){\n  return (\n    <div className=\"App\">\n      <div className = \"Container\">\n      <h1 className = \"title\">FLAMES APP</h1>\n      <div className = \"YourName\" >\n            <h1>Enter Your Name</h1>\n            <input id = \"YourName\" onChange = {this.changeUpperText1} required></input>\n        </div>\n        <div className = \"PartnerName\">\n            <h1>Enter Your Partner Name</h1>\n            <input id = \"PartnerName\" onChange = {this.changeUpperText2} required></input>\n        </div>\n        <button onClick={this.onchangeSubmit.bind(this)}>Calculate</button>\n        <OutputFlames output = {this.state.Output} />\n      </div>\n    </div>\n  );\n}\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}